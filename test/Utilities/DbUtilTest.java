/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Utilities;

import java.sql.ResultSet;
import java.sql.SQLException;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

/**
 *
 * @author mtsougranis
 */
public class DbUtilTest {
    
    public DbUtilTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
    }
    
    @AfterClass
    public static void tearDownClass() {
    }

   

    /**
     * Test of dbConnect method, of class DbUtil.
     */
    @Test
    public void testDbConnect() throws Exception {
        System.out.println("dbConnect");
        DbUtil.dbConnect();
        
    }

    /**
     * Test of dbDisconnect method, of class DbUtil.
     */
    @Test
    public void testDbDisconnect() throws Exception {
        System.out.println("dbDisconnect");
        DbUtil.dbDisconnect();
    }
    
    /**
     * Test of dbExecuteInsertUpdateQuery method, of class DbUtil
     */
    @Test
    public void testDbExecuteInsertUpdateQuery() throws SQLException,ClassNotFoundException
    {
        
        //test insert query
        String sqlQuery1="insert into action(title) values('Εναρμόνιση με τον GDPR')";
        int autoGeneratedKey=DbUtil.dbExecuteInsertUpdateQuery(sqlQuery1);
        assertTrue("Insert: no generated keys have been returned",autoGeneratedKey!=-1);
         
        
        //test update query
        String sqlQuery2="update action set title='Εναρμόνιση με τον κανονισμό GDPR' "
                + "where title='Εναρμόνιση με τον GDPR'";
        int autoGenKey=DbUtil.dbExecuteInsertUpdateQuery(sqlQuery2);
        assertTrue(autoGenKey==-1);
    }
    
    @Test
    public void testdbExecuteDeleteQuery() throws SQLException,ClassNotFoundException
    {
        
        //insert a test query 
        int newRecordId=DbUtil.dbExecuteInsertUpdateQuery("insert into action(title) values('testing delete method')");
        //delete the query that has been inserted
        String sqlQuery3="delete from action where id="+newRecordId;
        int rowsAffected=DbUtil.dbExecuteDeleteQuery(sqlQuery3);
        assertTrue(rowsAffected==1);
        
        //test deleting an invalid db record
        sqlQuery3="delete from action where id=-1";
        rowsAffected=DbUtil.dbExecuteDeleteQuery(sqlQuery3);
        assertTrue(rowsAffected==0);
    }
    
    /**
     * Method used for testing SQL exception handling in the te dbExecuteInsertUpdateQuery method
     * @throws SQLException
     * @throws ClassNotFoundException 
     */
    /*
    @Test(expected = SQLException.class)
    public void testDbExecuteQuerySQLExceptionHandling() throws SQLException,ClassNotFoundException
    {
        //try to use a syntactically wrong sql query
        //String sqlQuery1="inset into action(title) values('Εναρμόνιση με τον GDPR')";
        //int autoGeneratedKey=DbUtil.dbExecuteInsertUpdateQuery(sqlQuery1);
    }
    */
    
    @Test
    public void testDbExecute() throws SQLException,ClassNotFoundException
    {
        //testing the case when there are results
        String sql="select * from action";
        ResultSet rs=DbUtil.dbExecute(sql);
        assertTrue(rs.first());
        
        //testing the case when there are not results
        String sql2="select * from action where id=1234543";
        ResultSet rs2=DbUtil.dbExecute(sql2);
       assertTrue(!rs2.first());
       
    }
    
    /**
     * Method that tests the converting to mysql db date format
     * */
    @Test
    public void testConvertToDbDateFormat()
    {
        long days=0;
        String mySQLDate=DbUtil.convertToDbDateFormat(days);
        assertEquals("1970-1-1",mySQLDate);      
        
        long days2=1;
        String mySQLDate2=DbUtil.convertToDbDateFormat(days2);
        assertEquals("1970-1-2",mySQLDate2);
    }
    
    @Test
    public void testConvertFromDbDateFormat()
    {
        String dateString="1970-1-1";
        assertEquals(0,DbUtil.convertFromDbDateFormat(dateString));
    }
    
    /**
     * Method that tests converting to MySQL values (1 for true and 0 for false)
     */
    @Test
    public void testConvertToMySQLBoolean()
    {
        assertEquals(1,DbUtil.convertToMySQLBoolean(true));
        assertEquals(0,DbUtil.convertToMySQLBoolean(false));
    }
    
}
